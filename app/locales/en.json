{
    "links": {
        "eng": "",
        "it": "it/"
    },
    "works": {
        "key": "Works"
    },
    "description": {
        "hi": "Hello!",
        "title": "I'm Roberto, I'm a web developer looking for his first job. <br> I have a background in audiovisual production and creative coding, I'm experienced in working with cross-disciplinary teams. <br> I'm a passionate learner and also a very fast one, everything you can find in this portfolio I taught myself. I hope to hear from you!",
        "subtitle": "Passionate coder, in love with learning, always focused and determined."
    },
    "contacts": {
        "find": "Places you can find me",
        "me": "Contact me",
        "name": "Name",
        "subject": "Subject",
        "message": "Message"
    },
    "filters": {
        "all": "All"
    },
    "skills": {
        "title": "Skills and technologies",
        "tools": "Tools",
        "skills": "Skills",
        "description": "I have backend and frontend skills, familiarity with modern development tools and a background in creative coding"
    },
    "about": {
        "softFast": "Passionate about learning, also a very fast learner",
        "softTeam": "Experienced in working in cross-disciplinary teams",
        "softComm": "My background in audiovisual production and creative coding lets communicate easily with all professional roles within a team, be it a technician, a designer or an artist",
        "softLang": "Italian native speaker, fluent in English, currently learning Catalan for no specific reason other than it' fun"
    },
    "technologies": {
        "key": "Technologies"
    },
    "what": {
        "key": "What I did"
    },
    "mrwolfa": {
        "intr1": "A Telegram Bot made in <strong>Node.js</strong> that can answer questions asked by users, covering many topics such as mathematics, physics, history, culture, nutrition and many more.",
        "intr2": "Answer computing leverages the power of <strong>Wolfram|Alpha</strong> computational knowledge engine API.",
        "intr3": "It can provide answers either by text or vocal message thanks to <strong>Google Cloud Text-to-Speech API</strong>.",
        "capt1": "Works in private chat",
        "capt2": "Can answer with a vocal message",
        "capt3": "Filters non-english questions",
        "capt4": "Works as an inline-bot",
        "capt5": "Simple math handled by Math.js",
        "capt6": "Wolfram|Alpha for longer ones",
        "try": "Try MrWolfa",
        "point1": "Used <strong>Telegraf.js</strong> framework to interact with the Telegram Bot API and develop a bot with a custom command system that works both in private chats and as an inline-bot",
        "point2": "Used the <strong>wolfram-alpha-api</strong> library to fetch questions and get answers from Wolfram|Alpha",
        "point3": "Used the Node.js client for <strong>Google Cloud Text-to-Speech API</strong> to synthesize answers from Wolfram|Alpha and send them as vocal messages",
        "point4": "Used <strong>languagedetect</strong> module to implement a language filter that detects non-english questions and avoids wasting api calls",
        "point5": "Used <strong>Math.js</strong> to handle simple math questions and avoid wasting api calls",
        "point6": "Used <strong>Object Oriented programming</strong>, specifically a combination of the <strong>Template method pattern</strong> and the <strong>Strategy pattern</strong> to implement the decision tree the bot uses to answer questions",
        "point7": "Used Git and <strong>Heroku Pipelines</strong> to implement a simple continuous delivery workflow and handle bot releases"
    },
    "blup": {
        "intr1": "A web app to find public drinking fountains.",
        "intr2": "A community-driven platform where users can contribute by spotting and adding new fountains, verifying existing ones, reporting problems or malfunctions.",
        "intr3": "Made with <strong>Node.js</strong>, <strong>Express.js</strong>, <strong>MongoDB (Mongoose.js)</strong> and <strong>EJS</strong>, Blup started as my heavily customized final project for the <a href='https://www.udemy.com/share/101W9CBEcacllXRXw=/'>'The Web Developer Bootcamp 2021'</a> course and is currently a work in progress for a full-fledged, production-ready web app.",
        "intr4": "Deployed version is a prototype with functioning core features and a database populated by fake data.",
        "capt1": "Main fountains map (fake data)",
        "try": "Visit Website",
        "point1": "Designed the application following the <strong>Model–View–Controller</strong> pattern",
        "point2": "Implemented an extra <strong>Service layer</strong> in order to decouple business logic from Express.js controllers",
        "point3": "Implemented a <strong>Publish/Subscribe system</strong> using Node.js events in order to handle background tasks",
        "point4": "Used <strong>Express.js</strong> to create a server and define <strong>RESTful routes</strong>",
        "point5": "Used <strong>MongoDB</strong> with <strong>Mongoose.js</strong> to model data and handle <strong>CRUD operations</strong>",
        "point16": "Used <strong>EJS</strong> templating language to generate server-side rendered views",
        "point6": "Used <strong>JOI</strong> for <strong>data validation</strong> in CRUD operations",
        "point7": "Used <strong>express-session</strong> and <strong>Passport</strong> middlewares to handle <strong>authentication and authorization</strong>",
        "point8": "Used <strong>multer</strong> and <strong>cloudinary</strong> middlewares to handle <strong>file upload</strong>",
        "point9": "Used <strong>sanitize-html</strong> module, <strong>express-mongo-sanitize</strong> middleware and <strong>Helmet</strong> middleware to provide basic <strong>security</strong>",
        "point10": "Developed a <strong>mobile-first</strong> and <strong>fully responsive</strong> interface with <strong>Bulma</strong>. I choose a css-only framework like Bulma because I felt DOM manipulation was not extensively covered during the course and I wanted to practice more with frontend JavaScript",
        "point11": "Written several <strong>scripts for page navigation and interaction</strong>: changing tabs, closing notifications, opening and closing modals, navbar behaviour",
        "point12": "<strong>Written my own form validation functions</strong>, using ES6 classes and the Template Method design pattern",
        "point13": "Implemented <strong>AJAX operations</strong> to dynamically change page content when posting or deleting verifications, comments and reports",
        "point14": "Used <strong>Mapbox GL JS</strong> to display registered fountains on a cluster map",
        "point15": "Used <strong>Glide.js</strong> to implement a simple image carousel"
    },
    "habitat": {
        "intr1": "Habitat is an audiovisual composition produced by the Biennale di Venezia and realized for the Biennale Musica 2020 festival.",
        "intr2": "I worked for 6 months at CIMM (Centro di Informatica Musicale Multimediale) studios as a software developer and videoartist in team with a composer and a saxophonist.",
        "intr3": "I developed a system to generate real time 3D video based on live audio input, working with cutting-edge technology such as <strong>Touchdesigner</strong>, using <strong>Python</strong> for scripting and <strong>GLSL</strong> to write graphic shaders.",
        "intr4": "Here you can find a recording of the piece's premiere at Biennale Musica 2020",
        "capt1": "Working at CIMM studios",
        "capt2": "Working at Biennale's Tese dei Soppalchi theatre",
        "point1": "Used <strong>Touchdesigner</strong> and <strong>Python</strong> to develop the main application, which handles I/O (more than 80 Open Sound Control channels and several audio channels), data flow, real time analysis of saxophone and electronic sound, business logic, video generation and the rendering pipeline",
        "point2": "Wrote several <strong>vertex and pixel shaders with GLSL</strong> in order to render 3D geometries which can be deformed in real time according to external parameters",
        "point3": "Used the <strong>Wolfram Language</strong> to extract audio descriptors from the audio files used in the composition",
        "point4": "Worked and communicated effectively with an international team involving a composer, a saxophonist, several audio, video and light technicians and the Biennale mentors (Andrew Quinn, Thierry Coduys, Simone Conforti, Maurilio Cacciatore)",
        "point5": "The technical scope of the project is so big it's difficult to further sum it up, but I'm more than happy to go into more detail about this wonderful experience during job interviews!"
    }
}